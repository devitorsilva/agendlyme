rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserId() {
      return request.auth.uid;
    }
    
    function hasRole(role) {
      return isAuthenticated() && role in request.auth.token.roles;
    }
    
    function hasAccessToSalon(salonId) {
      return isAuthenticated() && salonId in request.auth.token.salonIds;
    }
    
    function isOwnerOfSalon(salonId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/salons/$(salonId)) &&
             get(/databases/$(database)/documents/salons/$(salonId)).data.ownerId == getUserId();
    }
    
    function isStaffOfSalon(salonId) {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/staff/$(getUserId() + '_' + salonId));
    }

    // Users collection
    match /users/{userId} {
      allow read, write: if isAuthenticated() && getUserId() == userId;
      allow read: if isAuthenticated() && hasRole('owner') || hasRole('staff');
    }

    // Salons collection
    match /salons/{salonId} {
      allow read: if hasAccessToSalon(salonId);
      allow create: if isAuthenticated() && 
                       request.resource.data.ownerId == getUserId() &&
                       request.resource.data.keys().hasAll(['name', 'address', 'ownerId', 'config', 'createdAt']);
      allow update: if isOwnerOfSalon(salonId) &&
                       !('ownerId' in request.resource.data.diff(resource.data).affectedKeys()) &&
                       !('createdAt' in request.resource.data.diff(resource.data).affectedKeys());
      allow delete: if isOwnerOfSalon(salonId);
    }

    // Services collection
    match /services/{serviceId} {
      allow read: if hasAccessToSalon(resource.data.salonId);
      allow create: if isAuthenticated() &&
                       hasAccessToSalon(request.resource.data.salonId) &&
                       (isOwnerOfSalon(request.resource.data.salonId) || hasRole('staff')) &&
                       request.resource.data.keys().hasAll(['salonId', 'name', 'durationMin', 'price', 'category', 'isActive']);
      allow update: if isAuthenticated() &&
                       hasAccessToSalon(resource.data.salonId) &&
                       (isOwnerOfSalon(resource.data.salonId) || hasRole('staff')) &&
                       !('salonId' in request.resource.data.diff(resource.data).affectedKeys());
      allow delete: if isOwnerOfSalon(resource.data.salonId);
    }

    // Staff collection
    match /staff/{staffId} {
      allow read: if hasAccessToSalon(resource.data.salonId);
      allow create: if isAuthenticated() &&
                       isOwnerOfSalon(request.resource.data.salonId) &&
                       request.resource.data.keys().hasAll(['userId', 'salonId', 'servicesOffered', 'calendarLinked', 'workHours']);
      allow update: if isAuthenticated() &&
                       (isOwnerOfSalon(resource.data.salonId) || 
                        (resource.data.userId == getUserId() && hasRole('staff'))) &&
                       !('salonId' in request.resource.data.diff(resource.data).affectedKeys()) &&
                       !('userId' in request.resource.data.diff(resource.data).affectedKeys());
      allow delete: if isOwnerOfSalon(resource.data.salonId);
    }

    // Appointments collection
    match /appointments/{appointmentId} {
      allow read: if isAuthenticated() &&
                     (hasAccessToSalon(resource.data.salonId) ||
                      resource.data.clientId == getUserId());
      allow create: if isAuthenticated() &&
                       request.resource.data.keys().hasAll(['salonId', 'staffId', 'clientId', 'serviceId', 'start', 'end', 'status', 'source', 'createdBy', 'createdAt']) &&
                       (hasAccessToSalon(request.resource.data.salonId) ||
                        request.resource.data.clientId == getUserId()) &&
                       request.resource.data.status in ['pending', 'confirmed'] &&
                       request.resource.data.source in ['app', 'web', 'walk_in'] &&
                       request.resource.data.start < request.resource.data.end &&
                       request.resource.data.createdBy == getUserId();
      allow update: if isAuthenticated() &&
                       (hasAccessToSalon(resource.data.salonId) ||
                        resource.data.clientId == getUserId()) &&
                       !('salonId' in request.resource.data.diff(resource.data).affectedKeys()) &&
                       !('createdBy' in request.resource.data.diff(resource.data).affectedKeys()) &&
                       !('createdAt' in request.resource.data.diff(resource.data).affectedKeys()) &&
                       request.resource.data.status in ['pending', 'confirmed', 'done', 'no_show', 'canceled'];
      allow delete: if isAuthenticated() &&
                       (isOwnerOfSalon(resource.data.salonId) ||
                        resource.data.clientId == getUserId());
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if hasAccessToSalon(resource.data.salonId);
      allow create: if isAuthenticated() &&
                       request.resource.data.keys().hasAll(['salonId', 'appointmentId', 'clientId', 'rating', 'createdAt']) &&
                       request.resource.data.clientId == getUserId() &&
                       request.resource.data.rating >= 1 &&
                       request.resource.data.rating <= 5;
      allow update: if isAuthenticated() &&
                       resource.data.clientId == getUserId() &&
                       !('salonId' in request.resource.data.diff(resource.data).affectedKeys()) &&
                       !('appointmentId' in request.resource.data.diff(resource.data).affectedKeys()) &&
                       !('clientId' in request.resource.data.diff(resource.data).affectedKeys()) &&
                       !('createdAt' in request.resource.data.diff(resource.data).affectedKeys());
      allow delete: if isAuthenticated() &&
                       (isOwnerOfSalon(resource.data.salonId) ||
                        resource.data.clientId == getUserId());
    }

    // Cash register collection
    match /cash_register/{dayId} {
      allow read, write: if isAuthenticated() &&
                            hasAccessToSalon(resource.data.salonId) &&
                            (isOwnerOfSalon(resource.data.salonId) || hasRole('staff'));
    }

    // Promotions collection
    match /promotions/{promotionId} {
      allow read: if hasAccessToSalon(resource.data.salonId);
      allow create, update, delete: if isOwnerOfSalon(resource.data.salonId);
    }

    // Default deny rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
